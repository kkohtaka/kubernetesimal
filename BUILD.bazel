load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
load("@bazel_gazelle//:def.bzl", "gazelle")
load("@io_bazel_rules_docker//container:container.bzl", "container_image", "container_push")

# gazelle:prefix github.com/kkohtaka/kubernetesimal
gazelle(name = "gazelle")

go_library(
    name = "kubernetesimal_lib",
    srcs = ["main.go"],
    importpath = "github.com/kkohtaka/kubernetesimal",
    visibility = ["//visibility:private"],
    deps = [
        "//api/v1alpha1",
        "//controllers",
        "@io_k8s_apimachinery//pkg/runtime",
        "@io_k8s_apimachinery//pkg/util/runtime",
        "@io_k8s_client_go//kubernetes/scheme",
        "@io_k8s_client_go//plugin/pkg/client/auth",
        "@io_k8s_sigs_controller_runtime//:controller-runtime",
        "@io_k8s_sigs_controller_runtime//pkg/healthz",
        "@io_k8s_sigs_controller_runtime//pkg/log/zap",
        "@io_kubevirt_api//core/v1:core",
        "@io_opentelemetry_go_otel//:otel",
        "@io_opentelemetry_go_otel//attribute",
        "@io_opentelemetry_go_otel//semconv/v1.4.0:v1_4_0",
        "@io_opentelemetry_go_otel_exporters_otlp_otlptrace//:otlptrace",
        "@io_opentelemetry_go_otel_exporters_otlp_otlptrace_otlptracegrpc//:otlptracegrpc",
        "@io_opentelemetry_go_otel_exporters_otlp_otlptrace_otlptracehttp//:otlptracehttp",
        "@io_opentelemetry_go_otel_sdk//resource",
        "@io_opentelemetry_go_otel_sdk//trace",
    ],
)

container_image(
    name = "nonroot_image",
    user = "65532:65532",
    visibility = ["//visibility:public"],
)

go_binary(
    name = "kubernetesimal",
    basename = "manager",
    embed = [":kubernetesimal_lib"],
    visibility = ["//visibility:public"],
)

container_image(
    name = "kubernetesimal_container",
    base = ":nonroot_image",
    entrypoint = ["/manager"],
    files = [":kubernetesimal"],
    visibility = ["//visibility:public"],
    workdir = "/",
)

container_push(
    name = "push_kubernetesimal",
    format = "Docker",
    image = ":kubernetesimal_container",
    registry = "{STABLE_KUBERNETESIMAL_CONTAINER_REGISTRY}",
    repository = "{STABLE_KUBERNETESIMAL_CONTAINER_REPOSITORY}",
    tag = "{STABLE_KUBERNETESIMAL_CONTAINER_TAG}",
)
